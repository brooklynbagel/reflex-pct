name: deploy
on: [push]
jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - run: reflex export --backend-only --zip-dest-dir ${{ runner.temp }}
      - run: unzip -d ${{ runner.temp }}/backend ${{ runner.temp }}/backend.zip
      - shell: bash
        env:
          CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
          CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
          BACKEND_GUID: ${{ secrets.BACKEND_GUID }}
        run: |
          args=("--entrypoint" "intro_reflex.intro_reflex:app.api" "--title" "Reflex Backend")
          if [[ -n "${BACKEND_GUID}" ]]; then
            args+=("--app-id" "${BACKEND_GUID}")
          fi
          rsconnect deploy fastapi "${args[@]}" ${{ runner.temp }}/backend

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - env:
          API_URL: ${{ secrets.CONNECT_SERVER }}/content/${{ secrets.BACKEND_GUID }}
          FRONTEND_PATH: ${{ secrets.FRONTEND_PATH }}
        run: reflex export --frontend-only --zip-dest-dir ${{ runner.temp }}
      - run: unzip -d ${{ runner.temp }}/frontend ${{ runner.temp }}/frontend.zip
      - shell: bash
        env:
          CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
          CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
          BACKEND_GUID: ${{ secrets.BACKEND_GUID }}
          FRONTEND_GUID: ${{ secrets.FRONTEND_GUID }}
        run: |
          args=("--title" "Reflex Frontend")
          if [[ -n "${FRONTEND_GUID}" ]]; then
            args+=("--app-id" "${FRONTEND_GUID}")
          fi
          rsconnect deploy html "${args[@]}" ${{ runner.temp }}/frontend
