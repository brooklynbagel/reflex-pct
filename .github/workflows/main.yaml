name: deploy
on: [push]
jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - run: cd intro_reflex && reflex export --backend-only --zip-dest-dir ..
      - run: unzip -d backend backend.zip
      - shell: bash
        env:
          CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
          CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
          BACKEND_GUID: ${{ secrets.BACKEND_GUID }}
        run: |
          if [[ -z "${BACKEND_GUID}" ]]; then
            echo "new deployment"
            rsconnect deploy fastapi --entrypoint intro_reflex.intro_reflex:app.api backend
          else
            echo "existing deployment"
            rsconnect deploy fastapi --entrypoint intro_reflex.intro_reflex:app.api --app-id "${BACKEND_GUID}" backend
          fi

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - run: pip install -r requirements.txt
      - env:
          API_URL: ${{ secrets.CONNECT_SERVER }}/content/${{ secrets.BACKEND_GUID }}
          FRONTEND_PATH: ${{ secrets.FRONTEND_PATH }}
        run: cd intro_reflex && reflex export --frontend-only --zip-dest-dir ..
      - run: unzip -d frontend frontend.zip
      - shell: bash
        env:
          CONNECT_SERVER: ${{ secrets.CONNECT_SERVER }}
          CONNECT_API_KEY: ${{ secrets.CONNECT_API_KEY }}
          BACKEND_GUID: ${{ secrets.BACKEND_GUID }}
          FRONTEND_GUID: ${{ secrets.FRONTEND_GUID }}
        run: |
          if [[ -z "${FRONTEND_GUID}" ]]; then
            echo "new deployment"
            rsconnect deploy html frontend
          else
            echo "existing deployment"
            rsconnect deploy html --app-id "${FRONTEND_GUID}" frontend
          fi
